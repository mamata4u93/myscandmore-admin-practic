{"ast":null,"code":"import Config from \"../common/Config\";\nimport { message } from 'antd';\nimport axios from 'axios';\nconst axiosAPI = axios.create({\n  baseURL: Config.apiBaseUrl,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nfunction handleResponse(error) {\n  let errorMessage = null;\n\n  if (error.response) {\n    errorMessage = error.response.data.message;\n  } else if (error.request) {\n    errorMessage = error.request;\n  } else {\n    errorMessage = error.message;\n  }\n\n  message.error(errorMessage);\n  return {\n    'status': \"error\",\n    'data': errorMessage\n  };\n}\n\nexport function apiPostCall(path, params) {\n  let headers = {};\n\n  if (params.token) {\n    headers.Authorization = params.token;\n  }\n\n  if (params.razorPaySignature) {\n    headers[\"x-razorpay-signature\"] = params.razorPaySignature;\n  }\n\n  delete params.token;\n  delete params.razorPaySignature;\n  return axiosAPI.post(path, params, {\n    headers: headers\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    return handleResponse(error);\n  });\n}\nexport function apiPutCall(path, params) {\n  let token = params.token;\n  delete params.token;\n  return axiosAPI.put(path, params, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    return handleResponse(error);\n  });\n}\nexport function apiGetCall(path, params) {\n  let token = params.token;\n  delete params.token;\n  let newUrl = `${path}?`;\n\n  for (const key of Object.keys(params)) {\n    if (params[key]) {\n      newUrl += `${key}=${params[key]}&`;\n    }\n  }\n\n  return axiosAPI.get(newUrl, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return handleResponse(error);\n  });\n}\nexport function apiDeleteCall(path, params) {\n  let token = params.token;\n  delete params.token;\n  return axiosAPI.delete(path, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    return handleResponse(error);\n  });\n}\nexport function uploadImgApi(file, token) {\n  return axiosAPI.get(`${Config.apiBaseUrl}/uploader?filename=${file.name}`, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(response => {\n    let fields = response.data.data.fields;\n    let url = response.data.data.url;\n    let myHeaders = new Headers();\n    myHeaders.append(\"key\", fields.key);\n    const formData = new FormData();\n\n    for (const [key, value] of Object.entries(fields)) {\n      formData.append(key, value);\n    }\n\n    formData.append('file', file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: myHeaders,\n      body: formData\n    }).then(response => {\n      if (response.status == 204) {\n        return `${url}/${fields.key}`;\n      } else {\n        return null;\n      }\n    }).catch(error => {\n      return handleResponse(error);\n    });\n  }).catch(error => {\n    return handleResponse(error);\n  });\n}\nexport function uploadVideoApi(file, token) {\n  const data = new FormData();\n  data.append('file', file);\n  return fetch(`${Config.apiBaseUrl}/videos/upload`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      authorization: token\n    },\n    body: data\n  }).then(response => response.json()).then(responseJson => {\n    if (responseJson) {\n      return `${responseJson.data[0].url}`;\n    }\n\n    return null;\n  }).catch(error => {\n    return handleResponse(error);\n  });\n}","map":{"version":3,"names":["Config","message","axios","axiosAPI","create","baseURL","apiBaseUrl","headers","handleResponse","error","errorMessage","response","data","request","apiPostCall","path","params","token","Authorization","razorPaySignature","post","then","catch","apiPutCall","put","apiGetCall","newUrl","key","Object","keys","get","apiDeleteCall","delete","uploadImgApi","file","name","fields","url","myHeaders","Headers","append","formData","FormData","value","entries","fetch","method","body","status","uploadVideoApi","Accept","authorization","json","responseJson"],"sources":["/Users/sunita/Sites/Erptech/myscandmore-admin-practic/src/utility/site-apis.js"],"sourcesContent":["import Config from \"../common/Config\";\r\nimport { message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst axiosAPI = axios.create({\r\n  baseURL: Config.apiBaseUrl,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nfunction handleResponse(error) {\r\n  let errorMessage = null\r\n  if (error.response) {\r\n    errorMessage = error.response.data.message\r\n  } else if (error.request) {\r\n    errorMessage = error.request\r\n  } else {\r\n    errorMessage = error.message\r\n  }\r\n  message.error(errorMessage);\r\n  return { 'status': \"error\", 'data': errorMessage }\r\n}\r\n\r\nexport function apiPostCall(path, params) {\r\n  let headers = {}\r\n  if (params.token) {\r\n    headers.Authorization = params.token\r\n  }\r\n  if (params.razorPaySignature) {\r\n    headers[\"x-razorpay-signature\"] = params.razorPaySignature\r\n  }\r\n  delete params.token\r\n  delete params.razorPaySignature\r\n  return axiosAPI.post(path, params, { headers: headers })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      return handleResponse(error);\r\n    });\r\n}\r\n\r\nexport function apiPutCall(path, params) {\r\n  let token = params.token\r\n  delete params.token\r\n  return axiosAPI.put(path, params, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      return handleResponse(error);\r\n    });\r\n}\r\n\r\nexport function apiGetCall(path, params) {\r\n  let token = params.token\r\n  delete params.token\r\n  let newUrl = `${path}?`\r\n  for (const key of Object.keys(params)) {\r\n    if (params[key]) {\r\n      newUrl += `${key}=${params[key]}&`\r\n    }\r\n  }\r\n  return axiosAPI.get(newUrl, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      return handleResponse(error);\r\n    });\r\n}\r\n\r\nexport function apiDeleteCall(path, params) {\r\n  let token = params.token\r\n  delete params.token\r\n  return axiosAPI.delete(path, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      return handleResponse(error);\r\n    });\r\n}\r\n\r\nexport function uploadImgApi(file, token) {\r\n  return axiosAPI.get(`${Config.apiBaseUrl}/uploader?filename=${file.name}`, { headers: { 'Authorization': token } })\r\n    .then((response) => {\r\n      let fields = response.data.data.fields\r\n      let url = response.data.data.url\r\n      let myHeaders = new Headers();\r\n      myHeaders.append(\"key\", fields.key);\r\n      const formData = new FormData();\r\n      for (const [key, value] of Object.entries(fields)) {\r\n        formData.append(key, value);\r\n      }\r\n      formData.append('file', file);\r\n      return fetch(url, {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: formData,\r\n      })\r\n        .then(response => {\r\n          if (response.status == 204) {\r\n            return `${url}/${fields.key}`\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n        .catch(error => {\r\n          return handleResponse(error);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n      return handleResponse(error);\r\n    });\r\n}\r\n\r\nexport function uploadVideoApi(file, token) {\r\n  const data = new FormData();\r\n  data.append('file', file);\r\n  return fetch(`${Config.apiBaseUrl}/videos/upload`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      authorization: token,\r\n    },\r\n    body: data,\r\n  })\r\n    .then(response => response.json())\r\n    .then(responseJson => {\r\n      if (responseJson) {\r\n        return `${responseJson.data[0].url}`\r\n      }\r\n      return null\r\n    }).catch(error => {\r\n      return handleResponse(error);\r\n    });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}