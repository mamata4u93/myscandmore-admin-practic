{"ast":null,"code":"import Config from \"common/Config\";\nexport const getList = async _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const token = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/videos`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const getVideoUrl = async _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const {\n    fileName,\n    token\n  } = queryKey[1];\n  console.log({\n    fileName\n  });\n  return fetch(`${Config.apiBaseUrl}/uploader?filename=${fileName}`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const uploadVideo = async data => {\n  const formData = new FormData();\n\n  for (const [key, value] of Object.entries(data)) {\n    formData.append(key, value);\n  }\n\n  for (const pair of formData.entries()) {\n    console.log(`${pair[0]}, ${pair[1]}`);\n  }\n\n  return fetch(`https://s3.ap-south-1.amazonaws.com/disco-shots`, {\n    method: \"POST\",\n    body: formData\n  });\n};\nexport const uploadVideoData = async data => {\n  const token = data.token;\n  return fetch(`${Config.apiBaseUrl}/viedos/`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: \"Bearer \" + token\n    },\n    data: data.videoData\n  });\n};\nexport const getBrands = async _ref3 => {\n  let {\n    queryKey\n  } = _ref3;\n  const {\n    search,\n    token\n  } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/brands?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const getProducts = async _ref4 => {\n  let {\n    queryKey\n  } = _ref4;\n  const {\n    search,\n    token\n  } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/products?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const getinfluencer = async _ref5 => {\n  let {\n    queryKey\n  } = _ref5;\n  const {\n    search,\n    token\n  } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/influencers?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const getCategories = async _ref6 => {\n  let {\n    queryKey\n  } = _ref6;\n  const {\n    search,\n    token\n  } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/categories?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const getHashTags = async _ref7 => {\n  let {\n    queryKey\n  } = _ref7;\n  const {\n    search,\n    token\n  } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/hashtags?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => res.json());\n};\nexport const uploadAllVideoData = async data => {\n  console.log({\n    data\n  });\n  const {\n    body,\n    token\n  } = data;\n  return fetch(`${Config.apiBaseUrl}/videos/`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n};","map":{"version":3,"names":["Config","getList","queryKey","token","fetch","apiBaseUrl","headers","Authorization","then","res","json","getVideoUrl","fileName","console","log","uploadVideo","data","formData","FormData","key","value","Object","entries","append","pair","method","body","uploadVideoData","videoData","getBrands","search","getProducts","getinfluencer","getCategories","getHashTags","uploadAllVideoData","JSON","stringify"],"sources":["/Users/sunita/Sites/Erptech/myscandmore-admin-practic/src/pages/videos/api.js"],"sourcesContent":["import Config from \"common/Config\";\n\nexport const getList = async ({ queryKey }) => {\n  const token = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/videos`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const getVideoUrl = async ({ queryKey }) => {\n  const { fileName, token } = queryKey[1];\n  console.log({ fileName });\n  return fetch(`${Config.apiBaseUrl}/uploader?filename=${fileName}`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const uploadVideo = async (data) => {\n  const formData = new FormData();\n  for (const [key, value] of Object.entries(data)) {\n    formData.append(key, value);\n  }\n  for (const pair of formData.entries()) {\n    console.log(`${pair[0]}, ${pair[1]}`);\n  }\n  return fetch(`https://s3.ap-south-1.amazonaws.com/disco-shots`, {\n    method: \"POST\",\n    body: formData,\n  });\n};\n\nexport const uploadVideoData = async (data) => {\n  const token = data.token;\n  return fetch(`${Config.apiBaseUrl}/viedos/`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: \"Bearer \" + token,\n    },\n    data: data.videoData,\n  });\n};\n\nexport const getBrands = async ({ queryKey }) => {\n  const { search, token } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/brands?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const getProducts = async ({ queryKey }) => {\n  const { search, token } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/products?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const getinfluencer = async ({ queryKey }) => {\n  const { search, token } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/influencers?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const getCategories = async ({ queryKey }) => {\n  const { search, token } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/categories?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const getHashTags = async ({ queryKey }) => {\n  const { search, token } = queryKey[1];\n  return fetch(`${Config.apiBaseUrl}/hashtags?name=${search}`, {\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n  }).then((res) => res.json());\n};\n\nexport const uploadAllVideoData = async (data) => {\n  console.log({ data });\n  const { body, token } = data;\n  return fetch(`${Config.apiBaseUrl}/videos/`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}